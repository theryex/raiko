# Server configuration (Port, Address) - Ensure these match your bot's .env
server:
  port: 2333
  address: 127.0.0.1
  connectionTimeout: 30000  # 30 seconds connection timeout
  requestTimeout: 10000    # 10 seconds request timeout
  http2:
    enabled: false

# Spring Boot settings (usually fine as is)
spring:
  main:
    banner-mode: log # Optional: 'off' to disable the Spring Boot banner

# Lavalink server core settings
lavalink:
  server:
    password: "SUPERSECUREPASSWORD_A1B2C3" # IMPORTANT: Must match LAVALINK_PASSWORD in your .env
    sources:
      # Disable Lavalink v4's native YouTube source to use the plugin
      youtube: false
      # Enable desired built-in sources
      soundcloud: true
      bandcamp: true
      twitch: true
      vimeo: true
      http: true
      local: false # Keep local disabled for security unless specifically needed
    filters:
      volume: true
      equalizer: true
      karaoke: true
      timescale: true
      tremolo: true
      vibrato: true
      distortion: true
      rotation: true
      channelMix: true
      lowPass: true
    # Other optional Lavalink settings (defaults are often fine)
    bufferDurationMs: 400
    # youtubePlaylistLoadLimit: 6 # This applies to the *built-in* source.
    playerUpdateInterval: 5 # In seconds
    youtubeSearchEnabled: false # Disable if plugin handles all YouTube searching
    soundcloudSearchEnabled: true # Keep true if you want Lavalink's scsearch: to work
    gc-warnings: true # Logs Java garbage collection warnings
    frameBufferDurationMs: 1000  # Increase frame buffer duration
    nullFrameTimeout: 10000      # Increase null frame timeout
    opusEncodingQuality: 10      # Higher quality opus encoding
    resamplingQuality: HIGH      # Better resampling quality
    trackStuckThresholdMs: 10000 # Increase stuck threshold
    useSeekGhosting: true       # Enable seek ghosting for smoother seeking

# --- Lavalink v4 Plugin Configuration ---
# Plugins listed here are configured *after* being loaded from the /plugins JAR directory
plugins:
  lavasrc:
    providers: # Custom providers for track loading. This is the default
      # - "dzisrc:%ISRC%" # Deezer ISRC provider
      # - "dzsearch:%QUERY%" # Deezer search provider
      - "ytsearch:\"%ISRC%\"" # Will be ignored if track does not have an ISRC. See https://en.wikipedia.org/wiki/International_Standard_Recording_Code
      - "ytsearch:%QUERY%" # Will be used if track has no ISRC or no track could be found for the ISRC
      #  you can add multiple other fallback sources here
    sources:
      spotify: true # Enable Spotify source
      applemusic: false # Enable Apple Music source
      deezer: false # Enable Deezer source
      yandexmusic: false # Enable Yandex Music source
      flowerytts: false # Enable Flowery TTS source
      youtube: false # Enable YouTube search source (https://github.com/topi314/LavaSearch)
      vkmusic: false # Enable Vk Music source
      tidal: false # Enable Tidal source
      qobuz : false # Enabled qobuz source
      ytdlp: false # Enable yt-dlp source
    lyrics-sources:
      spotify: false # Enable Spotify lyrics source
      deezer: false # Enable Deezer lyrics source
      youtube: false # Enable YouTube lyrics source
      yandexmusic: false # Enable Yandex Music lyrics source
      vkmusic: false # Enable Vk Music lyrics source
    spotify:
      # clientId & clientSecret are required for using spsearch
      clientId: "your client id"
      clientSecret: "your client secret"
      # spDc: "your sp dc cookie" # the sp dc cookie used for accessing the spotify lyrics api
      countryCode: "US" # the country code you want to use for filtering the artists top tracks. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      playlistLoadLimit: 6 # The number of pages at 100 tracks each
      albumLoadLimit: 6 # The number of pages at 50 tracks each
      resolveArtistsInSearch: true # Whether to resolve artists in track search results (can be slow)
      localFiles: false # Enable local files support with Spotify playlists. Please note `uri` & `isrc` will be `null` & `identifier` will be `"local"`
      preferAnonymousToken: true # Whether to use the anonymous token for resolving tracks, artists and albums. Playlists are always resolved with the anonymous token to support autogenerated playlists.
    applemusic:
      countryCode: "US" # the country code you want to use for filtering the artists top tracks and language. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      mediaAPIToken: "your apple music api token" # apple music api token
      # or specify an apple music key
      keyID: "your key id"
      teamID: "your team id"
      musicKitKey: |
        -----BEGIN PRIVATE KEY-----
        your key
        -----END PRIVATE KEY-----      
      playlistLoadLimit: 6 # The number of pages at 300 tracks each
      albumLoadLimit: 6 # The number of pages at 300 tracks each
    deezer:
      masterDecryptionKey: "your master decryption key" # the master key used for decrypting the deezer tracks. (yes this is not here you need to get it from somewhere else)
      arl: "your deezer arl" # the arl cookie used for accessing the deezer api this is not optional anymore
      formats: [ "FLAC", "MP3_320", "MP3_256", "MP3_128", "MP3_64", "AAC_64" ] # the formats you want to use for the deezer tracks. "FLAC", "MP3_320", "MP3_256" & "AAC_64" are only available for premium users and require a valid arl
    yandexmusic:
      accessToken: "your access token" # the token used for accessing the yandex music api. See https://github.com/TopiSenpai/LavaSrc#yandex-music
      playlistLoadLimit: 1 # The number of pages at 100 tracks each
      albumLoadLimit: 1 # The number of pages at 50 tracks each
      artistLoadLimit: 1 # The number of pages at 10 tracks each
    flowerytts:
      voice: "Emma" # (case-sensitive) get default voice from here https://api.flowery.pw/v1/tts/voices
      translate: false # whether to translate the text to the native language of voice
      silence: 0 # the silence parameter is in milliseconds. Range is 0 to 10000. The default is 0.
      speed: 1.0 # the speed parameter is a float between 0.5 and 10. The default is 1.0. (0.5 is half speed, 2.0 is double speed, etc.)
      audioFormat: "mp3" # supported formats are: mp3, ogg_opus, ogg_vorbis, aac, wav, and flac. Default format is mp3
    youtube:
      countryCode: "US" # the country code you want to use for searching & lyrics. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      language: "en" # the language code you want to use for searching & lyrics. See https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes
    vkmusic:
      userToken: "your user token" # This token is needed for authorization in the api. Guide: https://github.com/topi314/LavaSrc#vk-music
      playlistLoadLimit: 1 # The number of pages at 50 tracks each
      artistLoadLimit: 1 # The number of pages at 10 tracks each
      recommendationsLoadLimit: 10 # Number of tracks
    tidal:
      countryCode: "US" # the country code for accessing region-specific content on Tidal (ISO 3166-1 alpha-2).
      searchLimit: 6 # How many search results should be returned
      token: "your tidal token" # the token used for accessing the tidal api. See https://github.com/topi314/LavaSrc#tidal
    qobuz:
      userOauthToken : "your user oauth token" # This token is needed for authorization in the api. Guide: https://github.com/topi314/LavaSrc#qobuz
      #      appId : optional (Only pass it when you are using an old userOauthToken)
      #      appSecret : optional (Only pass it when you are using an old userOauthToken)
    ytdlp:
      path: "yt-dlp" # the path to the yt-dlp executable.
      searchLimit: 10 # How many search results should be returned
      customLoadArgs: ["-q", "--no-warnings", "--flat-playlist", "--skip-download", "-J"] # Custom arguments to pass to yt-dlp
      customPlaybackArgs: ["-q", "--no-warnings", "-f", "bestaudio", "-J"] # Custom arguments for yt-dlp

# Logging configuration (Optional - Fine-tune Lavalink's logging)
logging:
  level:
    root: INFO
    lavalink: INFO